"""project models

Revision ID: 2d5f21c387f6
Revises: cc818e85f637
Create Date: 2023-09-14 21:02:39.943813

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "2d5f21c387f6"
down_revision = "a0fcb63800b2"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects_category",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "projects_github_repository",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("url", sa.String(length=100), nullable=False),
        sa.Column("stars", sa.Integer(), nullable=True),
        sa.Column("commits_value", sa.Integer(), nullable=True),
        sa.Column("forks_value", sa.Integer(), nullable=True),
        sa.Column("last_commit_date", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "projects_tool",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "projects_project",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("github_repo", sa.UUID(), nullable=False),
        sa.Column("project_owner", sa.UUID(), nullable=False),
        sa.Column("is_banned", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["github_repo"],
            ["projects_github_repository.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_owner"],
            ["users_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_projects_project_github_repo"), "projects_project", ["github_repo"], unique=False
    )
    op.create_index(
        op.f("ix_projects_project_project_owner"),
        "projects_project",
        ["project_owner"],
        unique=False,
    )
    op.create_table(
        "projects_categories_group",
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["projects_category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects_project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "projects_tools_group",
        sa.Column("tool_id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects_project.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tool_id"],
            ["projects_tool.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("projects_tools_group")
    op.drop_table("projects_categories_group")
    op.drop_index(op.f("ix_projects_project_project_owner"), table_name="projects_project")
    op.drop_index(op.f("ix_projects_project_github_repo"), table_name="projects_project")
    op.drop_table("projects_project")
    op.drop_table("projects_tool")
    op.drop_table("projects_github_repository")
    op.drop_table("projects_category")
    # ### end Alembic commands ###
